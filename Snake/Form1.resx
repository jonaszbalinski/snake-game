<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        trYKuwAAAABJRU5ErkJggg==
</value>
  </data>
</root>